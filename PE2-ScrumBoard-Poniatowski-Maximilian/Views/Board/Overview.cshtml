@{
    ViewData["Title"] = "Tasks Overview";
}

@model ScrumBoardViewModel

@*I implemented a little "view" for when u try to access .../Board/Overview without being loged in.*@
@if (@Model.User == null)
{
    <h1>Fatal Error!</h1>
    <h2>U need to log in, before coming here!</h2>
    <a asp-controller="Home" asp-action="Index" class="btn btn-warning">OK</a>
}
else
{

    <h1>Welcome @Model.User.UserName.ToUpper().ToString()</h1>
    <a asp-controller="Board" asp-action="Logout">Logout</a>
    <p>Here are your tasks, have a productive day.</p>
    <table class="table mt-2">
        <thead>
            <tr>
                <th width="33%" class="text-center">Open</th>
                <th width="33%" class="text-center">In Progress</th>
                <th width="33%" class="text-center">Done</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @foreach (var item in Model.Tasks.Where(t => t.StatusId == 1 && t.UserId == Model.User.Id))
                    {
                        <div class="card" width="33%">
                            <div class="card-body">
                                <h5 class="card-title">@item.TaskName</h5>
                                <p class="card-text">@item.TaskDescription</p>
                                <a asp-controller="Board" asp-action="StartTask" asp-route-id="@item.Id" class="btn btn-primary">Start Task</a>
                            </div>
                        </div>
                    }
                </td>
                <td>
                    @foreach (var item in Model.Tasks.Where(t => t.StatusId == 2 && t.UserId == Model.User.Id))
                    {
                        <div class="card" width="33%">
                            <div class="card-body">
                                <h5 class="card-title">@item.TaskName</h5>
                                <p class="card-text">@item.TaskDescription</p>
                                <a asp-controller="Board" asp-action="FinishTask" asp-route-id="@item.Id" class="btn btn-primary">Done</a>
                            </div>
                        </div>
                    }
                </td>
                <td>
                    @foreach (var item in Model.Tasks.Where(t => t.StatusId == 3 && t.UserId == Model.User.Id))
                    {
                        <div class="card" width="33%">
                            <div class="card-body">
                                <h5 class="card-title">@item.TaskName</h5>
                                <p class="card-text">@item.TaskDescription</p>
                                <a asp-controller="Board" asp-action="DeleteTask" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            </div>
                        </div>
                    }
                </td>

            </tr>
        </tbody>
    </table>

    <a asp-controller="Board" asp-action="CreateTask">Create Task</a>
}

